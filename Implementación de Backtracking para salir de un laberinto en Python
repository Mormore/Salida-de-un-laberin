def find_path(maze, x, y, path):
    if x < 0 or y < 0 or x >= len(maze) or y >= len(maze[0]) or maze[x][y] != 0:
        # Si la posición está fuera del laberinto o es una pared, retornar False
        return False
    
    if x == len(maze) - 1 and y == len(maze[0]) - 1:
        # Si se llega a la salida, imprimir el camino y retornar True
        print(path)
        return True
    
    # Marcar la celda como visitada
    maze[x][y] = -1
    
    # Intentar moverse en todas las direcciones
    if (find_path(maze, x + 1, y, path + 'D') or
        find_path(maze, x, y + 1, path + 'R') or
        find_path(maze, x - 1, y, path + 'U') or
        find_path(maze, x, y - 1, path + 'L')):
        return True
    
    # Marcar la celda como no visitada
    maze[x][y] = 0
    return False

# Ejemplo de uso
maze = [
    [0, 1, 0, 0],
    [0, 0, 0, 1],
    [1, 0, 1, 0],
    [0, 0, 0, 0]
]

find_path(maze, 0, 0, '')

